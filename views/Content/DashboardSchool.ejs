<%- include('../ui/sidebar2.ejs') %>
<title>School Dashboard</title>
<script src="/socket.io/socket.io.js"></script>
<style>
  .styled-table {
    border-collapse: collapse;
    font-size: 0.9em;
    font-family: sans-serif;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);
  }

  .styled-table thead tr {
    background-color: #695cfe;
    color: #ffffff;
    text-align: left;
  }

  .styled-table th,
  .styled-table td {
    padding: 20px 15px;
  }

  .styled-table tbody tr {
    border-bottom: 1px solid #dddddd;
  }

  .styled-table tbody tr:nth-of-type(even) {
    background-color: #f3f3f3;
  }

  .styled-table tbody tr:last-of-type {
    border-bottom: 5px solid #009879;
  }

  .news_list {
    padding: 60px 30px;
    margin-top: 10px;
    margin-bottom: -50px;
  }

  .news_content {
    padding: 5px 30px;
    margin-bottom: 50px;
  }

  .newsImg img {
    width: 200px;
  }

  .news_Title {
    font-size: 30px;
  }

  .news_Content {
    font-size: 20px;
  }

  .news_img {
    display: flex;
    justify-content: center;
    align-items: center;
    /* Optional: set a maximum width if needed */
    max-width: 100%;
    /* Adjust as needed */
  }

  .news_img img {
    /* Remove the fixed width */
    width: 100%;
    /* Optional: set a max-width to control the maximum width of the image */
    max-width: 1000px;
    /* Adjust as needed */
    height: auto;
    /* Maintain aspect ratio */
  }
</style>
<%- include('../partials/messages.ejs')%>
<% if( user.userType == "School Head"){ %>
<div class="col-lg-12 news_list">
  <div class="card card-outline card-primary">
    <div class="card-header">
      <div class="card-tools">
        <a href="/dashboardAdd" class="btn btn-block btn-sm btn-default btn-flat border-primary"><i class="fa-solid fa-plus"></i> Add News</a>
      </div>
    </div>
    <div class="card-body" style="overflow-y: auto;">
      <table class="table-hover styled-table table table-bordered commonTable" id="list">
        <h3 class="mb-4 control-label fw-bold text-muted" style="text-align: center">
          School News List
        </h3>
        <thead class="table-info">
          <tr>
            <th width="5%" class="text-center">#</th>
            <th width="22%">News Title</th>
            <th width="12%">News Image</th>
            <th style="text-align: center;" width="5%">Action</th>
          </tr>
        </thead>
        <tbody>
          <% let SameSchoolCount = 0;
          news.forEach((news, i) => {
            if (news.userSchool === SameSchool) {
                SameSchoolCount++;
              } %>
          <% if(news.userSchool === SameSchool){ %>
          <tr>
            <td class="text-center">
              <b><%= SameSchoolCount %></b>
            </td>
            <td>
              <b class="truncate">
                <%= news.newsTitle %>
              </b>
            </td>
            <td class="text-center">
              <% news.newsImage.forEach(function(image) { %>
              <img src="/public/news/<%= image %>" width="100" class="img-thumbnail mt-1" alt="">
              <% }); %>
            </td>
            <td class="text-center">
              <a href="/action/GetNews2/<%= news._id %>" class="btn btn-outline-success">
                <i class="fa-solid fa-pen-to-square"></i>
              </a>
              <div class="btn-group" data-bs-toggle="tooltip" data-bs-placement="bottom" data-bs-title="Delete">
                <a class="btn btn-outline-danger view_news" data-bs-toggle="modal" data-bs-target="#delete_news" data-id="<%= news._id %>">
                  <i class="fa-solid fa-trash"></i>
                </a>
              </div>
            </td>
          </tr>
          <% } %>
          <% }); %>
        </tbody>
      </table>
    </div>
  </div>
</div>
<% }else { %>
<div class="news_list"></div>
<% } %>



<!-- Deletition of the News Modal -->
<div class="modal fade" id="delete_news" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="staticBackdropLabel">Delete News</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" id="closeButton"></button>
      </div>
      <div class="modal-body">
        <div class="text-center" id="DeleteNewsLoader">
          <div class="spinner-border" role="status">
            <span class="visually-hidden">Loading...</span>
          </div>
        </div>
        <div class="" id="Delete_News">
          <!-- The data from the UserAction will be shown here -->
        </div>
      </div>
      <div class="modal-footer" id="modal-footer">
        <button type="button" class="btn btn-danger" id="DeleteNews" onclick="DeleteNews('${userID}')">
          Delete News
        </button>
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal" aria-label="Close">
          Cancel
        </button>
      </div>
    </div>
  </div>
</div>


<div class="accordion news_content" id="accordionExample">
  <%
      // Reverse the order of the news items to apply Last In, First Out (LIFO)
      let itemCount = 0;
      const totalNewsItems = news.length;
      const reversedNews = [...news].reverse(); // Make a copy and reverse it
      let isFirstForNullSchool = true; // Flag to track if the first item with userSchool === null has been encountered
      reversedNews.forEach((item, index) => {
        // Set isFirst based on whether item.userSchool is null and isFirstForNullSchool flag
        const isFirst = (item.userSchool === SameSchool && isFirstForNullSchool);
        if (isFirst) {
          // If this is the first item with userSchool === null, set isFirstForNullSchool to false
          isFirstForNullSchool = false;
        }
        if (item.userSchool === SameSchool) {
          itemCount++;
        }
    %>
  <% if(item.userSchool === SameSchool){ %>
    <div class="accordion-item">
      <h2 class="accordion-header" id="heading<%= index %>">
        <button class="accordion-button <%= isFirst ? '' : 'collapsed' %>" type="button" data-bs-toggle="collapse" data-bs-target="#collapse<%= index %>" aria-expanded="<%= isFirst ? 'true' : 'false' %>" aria-controls="collapse<%= index %>">
          <b> - <%= item.newsTitle %></b>
          <p style="display: none;">ID: <%= item._id %></p>
        </button>
      </h2>
      <div id="collapse<%= index %>" class="accordion-collapse collapse <%= isFirst ? 'show' : '' %>" aria-labelledby="heading<%= index %>" data-bs-parent="#accordionExample">
        <div class="accordion-body">
          <div class="card-body">

            <div class="news_Title text-center">
              <b class="truncate"><%= item.newsTitle %></b>
            </div>

            <div class="news_Content px-2" style="text-align: justify;">
              <%- item.newsContent %>
            </div>

            <div class="">
              <div id="carouselExampleDark<%= index %>" class="carousel carousel-dark slide" data-bs-ride="carousel">
                <div class="carousel-inner">
                  <% item.newsImage.forEach((image, index) => { %>
                  <div class="carousel-item <%= index === 0 ? 'active' : '' %>" data-bs-interval="10000">
                    <img src="/public/news/<%= image %>" class="d-block w-100" alt="...">
                  </div>
                  <% }); %>
                </div>
                <button class="carousel-control-prev" type="button" data-bs-target="#carouselExampleDark<%= index %>" data-bs-slide="prev">
                  <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                  <span class="visually-hidden">Previous</span>
                </button>
                <button class="carousel-control-next" type="button" data-bs-target="#carouselExampleDark<%= index %>" data-bs-slide="next">
                  <span class="carousel-control-next-icon" aria-hidden="true"></span>
                  <span class="visually-hidden">Next</span>
                </button>
              </div>
            </div>

          </div>
        </div>
      </div>
    </div>
  <% } %>
  <% }); %>
  <% if (itemCount === 0) { %>
    <div class="text-center fw-bold" style="font-size: 100px;">NO SCHOOL NEWS POSTED!!</div>
  <% }%>
</div>

<!-- FOR REAL TIME UPDATE -->
<!-- <div id="socketTest"></div> -->

<!-- FOR REAL TIME UPDATE -->
<!-- <script>
  const socket = io();

  // Current count of news items
  let newsCount = "<%= totalNewsItems %>"; // Updated for the reversed array

  socket.on("newSchoolNews", (news) => {
    // Increment the news count to maintain unique numbering
    newsCount++;

    // Create a new accordion item for the news
    const newAccordionItem = document.createElement("div");
    newAccordionItem.classList.add("accordion-item");

    // Set the inner HTML for the new accordion item
    newAccordionItem.innerHTML = `
      <h2 class="accordion-header" id="heading${newsCount}">
        <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#collapse${newsCount}" aria-expanded="true" aria-controls="collapse${newsCount}">
          <i class="fa-regular fa-bell fa-bounce" style="color: #009879;"></i> &nbsp;
            <b>- ${news.newsTitle}</b>
            <p style="display: none;">ID: ${news._id}</p>
        </button>
      </h2>
      <div id="collapse${newsCount}" class="accordion-collapse collapse show" aria-labelledby="heading${newsCount}" data-bs-parent="#accordionExample">
        <div class="accordion-body">
          <div class="card-body">
            <div class="news_Title mb-3 text-center">
              <b class="truncate">${news.newsTitle}</b>
            </div>
            <div class="news_Content mb-3 text-center">
              ${news.newsContent}
            </div>
            <div class="news_img">
              <span class="con">
                <img src="/public/news/${news.newsImage}" alt="" />
              </span>
            </div>
          </div>
        </div>
      </div>
    `;

    // Insert the new item at the top of the accordion
    const accordion = document.getElementById("accordionExample");
    accordion.insertBefore(newAccordionItem, accordion.firstChild);

    // Collapse other accordion items
    const accordionItems = accordion.querySelectorAll('.accordion-item');
    accordionItems.forEach((item, index) => {
      if (index > 0) {
        const collapseDiv = item.querySelector('.accordion-collapse');
        collapseDiv.classList.remove("show");
      }
    });
  });
</script> -->

<!-- FOR REAL TIME DELETE -->
<script>
  document.addEventListener("DOMContentLoaded", async function() {
    const socket = io("http://localhost:8000");

    // Listen for the newsDeleted event
    socket.on("newsDeleted", (data) => {
      console.log("Received newsDeleted event:", data);

      const {
        newsID
      } = data;

      // Find and remove the corresponding news item from the accordion
      const newsItems = document.querySelectorAll('.accordion-item'); // Loop through accordion items

      newsItems.forEach((newsItem) => {
        // Extract the hidden news ID to identify the correct item
        const hiddenIDElement = newsItem.querySelector("p");
        const extractedID = hiddenIDElement.textContent.match(/ID: (.+)/)[1];

        if (extractedID === newsID) {
          console.log("Removing news item with ID:", newsID);
          newsItem.remove(); // Remove the news item from the accordion
        }
      });
    });
  });
</script>

<script>
  document.addEventListener("DOMContentLoaded", async function() {
    const viewButtons = document.querySelectorAll(".view_news");
    viewButtons.forEach(async function(button) {
      button.addEventListener("click", async function() {
        const userID = button.getAttribute("data-id");

        //Pass the news ID in the Delete Function
        const DeleteNews = document.getElementById("DeleteNews");
        if (DeleteNews) {
          DeleteNews.setAttribute("onclick", `DeleteNews('${userID}')`);
        }

        document.getElementById("DeleteNewsLoader").style.display = "block";

        try {
          const response = await fetch(`/action/GetNews/${userID}`);
          const data = await response.json();

          // Check if username is available
          const newsTitle = data.newsTitle || "News Title"; // Use a default value if username is undefined
          const newsContent = data.newsContent || "News Title";

          document.getElementById("DeleteNewsLoader").style.display = "none";

          document.getElementById("Delete_News").innerHTML = `
          <div class="text-center" style="font-size:20px;">
              <b>Are you sure you want to delete this news: <br> <b style="color:red;">${newsTitle}</b> ? </br>
          </div>
        `;
        } catch (error) {
          // Hide loading spinner in case of an error
          document.getElementById("DeleteNewsLoader").style.display = "none";

          console.error(error);
        }

      });
    });
  });

  //Handles the Deletion of news
  async function DeleteNews(userID) {
    try {
      const response = await fetch(`/action/DeleteNews/${userID}`, {
        method: "DELETE",
      });
      if (response.ok) {
        // Document deleted successfully, refresh the page
        location.reload();
        req.flash("success_msg", "News Deleted Successfully");
      } else {
        console.error("Failed to delete news");
      }
    } catch (error) {
      console.error(error);
    }
  }
</script>
<%- include('../ui/footer2.ejs') %>